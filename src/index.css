@import url('https://fonts.googleapis.com/css2?family=Pretendard:wght@300;400;500;600;700;800&display=swap');

/* 1. 루트에 컨테이너 크기에 비례하는 폰트 크기 변수 선언 */
:root {
  /* 컨테이너 너비의 4%를 기본 폰트 크기로 사용하되,
     최소 14px, 최대 18px를 넘지 않도록 설정 */
  --dynamic-font-size: clamp(14px, 4vw, 18px);
}

* {
  font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
}

body {
  background-color: #FFFFFF;
  min-height: 100vh;
  overflow: hidden; /* 필요 없으면 지워도 됨 */
}

#app-container {
  width: 100%;
  min-height: 100vh;
  background-color: #f0f2f5;
}

#root {
  width: 100%;
  height: 100%;
}

/* 데스크톱 (넓은 화면) 스타일 - 화면 가로가 768px 이상일 때 적용 */
@media (min-width: 768px) {
  body {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #app-container {
    /* 2. 고정 크기 대신 비율과 최대/최소 크기 지정 */
    aspect-ratio: 1 / 2; /* 가로 1, 세로 2 비율 고정 */
    width: auto;
    height: 80vh; /* 화면 높이의 80%를 기준으로 크기 조절 */
    
    min-width: 320px;   /* 최소 너비 지정 */
    max-height: 800px;  /* 최대 높이 지정 */

    /* 2. 반투명 유리 효과(Glassmorphism) 적용 */
    background: rgba(255, 255, 255, 0.15); /* 배경을 옅은 반투명 흰색으로 */
    backdrop-filter: blur(25px);          /* 배경을 흐릿하게 만드는 핵심 속성 */
    -webkit-backdrop-filter: blur(25px);  /* Safari 브라우저 호환성 */
    
    border: 1px solid rgba(255, 255, 255, 0.2); /* 테두리도 반투명하게 변경 */
    border-radius: 32px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    position: relative;
  }

  #root {
    overflow-y: auto;
  }

  /* 3. 컨테이너 내부의 폰트 크기를 동적으로 조절 */
  #app-container {
    font-size: var(--dynamic-font-size);
  }
}

.bg-pattern {
  background-image:
    radial-gradient(circle at 25% 25%, rgba(255,255,255,0.1) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(255,255,255,0.05) 0%, transparent 50%);
}

.card {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow:
    0 20px 40px rgba(0, 0, 0, 0.1),
    0 0 0 1px rgba(255, 255, 255, 0.05);
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.service-card, .option-card {
  background: rgba(255, 255, 255, 0.9);
  border: 2px solid rgba(102, 126, 234, 0.2);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  position: relative;
  overflow: hidden;
  will-change: transform, box-shadow;
}

.option-card.selected::after {
  content: '✓';
  position: absolute;
  top: 1rem;
  right: 1rem;
  width: 1.5rem;
  height: 1.5rem;
  background: #667eea;
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 0.9rem;
  transform-origin: center;
  animation: check-pop 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
}

.service-card:hover, .option-card:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 25px 50px -12px rgba(102, 126, 234, 0.3);
  border-color: rgba(102, 126, 234, 0.3);
}

.service-card:active, .option-card:active {
  transform: translateY(-2px) scale(0.99);
  transition-duration: 0.1s;
}

.service-card.selected, .option-card.selected {
  border-color: #667eea;
  background: rgba(102, 126, 234, 0.05);
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 25px 50px -12px rgba(102, 126, 234, 0.4);
}

.btn-primary {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  will-change: transform, box-shadow;
}

.btn-primary::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: left 0.5s;
}

.btn-primary:hover::before { left: 100%; }

.btn-primary:hover {
  transform: translateY(-3px) scale(1.03);
  box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
}

.btn-primary:active {
  transform: translateY(-1px) scale(0.99);
  transition-duration: 0.1s;
}

.btn-primary:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}
.btn-primary:disabled::before { display: none; }

.input-field, .textarea-field {
  background: rgba(255, 255, 255, 0.9);
  border: 2px solid rgba(102, 126, 234, 0.1);
  transition: all 0.3s ease;
}

.input-field:focus, .textarea-field:focus {
  border-color: #667eea;
  box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
  outline: none;
  background: rgba(255, 255, 255, 1);
}

.progress-bar-container {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(20px);
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  transition: opacity 0.5s, transform 0.5s;
}

.progress-bar-container.hidden {
  opacity: 0;
  transform: translateY(-100%);
}

#progressBar { position: relative; overflow: hidden; }

#progressBar::after {
  content: '';
  position: absolute;
  inset: 0;
  background-image: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.4) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  animation: shimmer 2s infinite;
}

.screen {
  transition: opacity 0.5s, transform 0.5s;
  will-change: transform, opacity;
}

.screen.slide-up-exit { opacity: 0; transform: translateY(-40px); }
.screen.slide-down-exit { opacity: 0; transform: translateY(40px); }
.screen.slide-down-enter { opacity: 1; transform: translateY(0); }

.screen.hidden:not(.slide-down-enter) {
  opacity: 0;
  transform: translateY(40px);
  pointer-events: none;
}

.typing {
  overflow: hidden;
  border-right: 3px solid #374151;
  white-space: nowrap;
  animation: typing 2.5s steps(40, end), blink 1s step-end infinite;
}

.priority-badge {
  transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), opacity 0.3s;
  transform: scale(0);
  opacity: 0;
}
.priority-badge:not(.hidden) { transform: scale(1); opacity: 1; }

@keyframes typing { from { width: 0 } to { width: 100% } }
@keyframes blink { from, to { border-color: transparent } 50% { border-color: #374151; } }
@keyframes fadeIn { from { opacity: 0; transform: translateY(30px); } to { opacity: 1; transform: translateY(0); } }
@keyframes shimmer { 100% { transform: translateX(100%); } }
@keyframes pulse-glow {
  0% { box-shadow: 0 0 0 0 rgba(102, 126, 234, 0.5); }
  70% { box-shadow: 0 0 0 15px rgba(102, 126, 234, 0); }
  100% { box-shadow: 0 0 0 0 rgba(102, 126, 234, 0); }
}
@keyframes check-pop { from { transform: scale(0.5); opacity: 0; } to { transform: scale(1); opacity: 1; } }

.pulse-glow { animation: pulse-glow 2s infinite; }

.icon-large {
  /* 4. 아이콘 크기도 폰트 크기에 비례하도록 em 단위 사용 */
  font-size: 4em; /* 4 * var(--dynamic-font-size) */
  margin-bottom: 1.5rem;
  filter: drop-shadow(0 4px 8px rgba(0,0,0,0.1));
  display: inline-block;
}
.icon-medium {
  font-size: 3em; /* 3 * var(--dynamic-font-size) */
  margin-bottom: 1rem;
  display: inline-block;
}

.text-gradient {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}
.text-shadow { text-shadow: 0 2px 4px rgba(0, 0, 0, 0.25); }

.option-card.priority-button.selected::after { content: none; }

/* 5. 모바일 화면 최적화를 위한 미디어 쿼리 추가 */
@media (max-width: 767px) {
  /* 
    모바일에서는 화면 너비에 비례하는 vw 단위보다
    고정된 rem 단위를 사용하는 것이 레이아웃 안정성에 더 좋습니다.
  */
  :root {
    /* 모바일용 기본 폰트 크기를 재정의합니다. */
    --dynamic-font-size: 15px;
  }

  /* 
    옵션 버튼들이 한 줄에 2개씩 보이도록 하고,
    내부 폰트 크기를 좀 더 작게 조절합니다.
  */
  .option-card {
    /* 폰트 크기를 기본값보다 약간 작게 설정하여 여러 줄로 나뉘는 것을 방지 */
    font-size: 0.9rem; /* 15px * 0.9 = 13.5px */
    padding: 1rem; /* 내부 여백을 살짝 줄여 공간 확보 */
  }

  /* 
    질문 제목(h2)은 다른 텍스트보다 조금 더 크게 설정하여 강조합니다.
    App.tsx에서 질문 제목에 'question-title' 클래스를 추가했다고 가정합니다.
  */
  .question-title {
    font-size: 1.5rem; /* 15px * 1.5 = 22.5px */
    line-height: 1.3;
  }

  /* 
    옵션들을 담고 있는 그리드 컨테이너의 간격을 조절합니다.
    App.tsx에서 옵션들을 감싸는 div에 'options-grid' 클래스를 추가했다고 가정합니다.
  */
  .options-grid {
    grid-template-columns: repeat(2, 1fr); /* 한 줄에 2개의 버튼이 보이도록 설정 */
    gap: 0.75rem; /* 버튼 사이의 간격을 줄임 */
  }
}